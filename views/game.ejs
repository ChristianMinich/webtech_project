<html lang="en">

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>QuizGame</title>
  <style>
    /* Allgemeine Stile */
    body {
      margin: 0;
      background: url("/assets/backgrounds/gameWallpaper.jpg");
      background-size: cover;
      background-repeat: no-repeat;
      background-position: center;
      font-family: 'Montserrat', sans-serif;
      text-align: center;
      padding: 20px;
      display: marker;
      min-height: 100vh;
      width: auto;
      height: auto;
      background-position-x: center;
      background-position-y: center;
      background-attachment: fixed;
    }


    h1,
    h2 {
      text-align: center;
    }

    img {
      display: block;
      margin: 0 auto;
    }

    /* Header */
    h1 {
      font-size: 24px;
      color: white;
    }

    h2 {
      font-size: 18px;
      color: white;
    }

    .contentContainer {

      padding: 20px;
      display: marker;
      background-repeat: no-repeat;
      background-position: center;
      background: rgba(128, 128, 128, 0.6);
      max-width: fit-content;
      width: auto;
      border-radius: 25px;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      margin: auto;
      height: fit-content;
      /*box-shadow: 0 0 10px rgba(0, 0, 0, 0.6);*/
      box-shadow: white;
    }

    /* Scoreboard */
    .scoreboard,
    .roundCounter {
      margin: 20px auto;
      max-width: 400px;
      padding: 10px;
      background-color: rgba(128, 128, 128, 0.6);
      border-radius: 5px;

    }

    .scoreboard {
      color: white;
    }

    .roundCounter {
      color: white;
    }

    /* Quizbox */
    .quizbox {
      max-width: 400px;
      margin: 0 auto;
      padding: 20px;
      background-color: transparent;
      border-radius: 5px;
    }

    .answers {
      padding: 10px;
      margin: 10px 0;
      background-color: rgba(128, 128, 128, 0.6);
      border-radius: 5px;
      cursor: pointer;
      color: white;
    }

    /* Zwischenrunde */
    .betweenRound {
      max-width: 400px;
      margin: 20px auto;
      padding: 10px;
      text-align: center;
      background-color: rgba(128, 128, 128, 0.6);
      border-radius: 5px;
      color: white;
    }

    #countdown {
      font-size: 24px;
      font-weight: bold;
      margin-top: 10px;
    }

    /* Spieler-Elemente */

    .userscore {
      margin: 10px auto;
      max-width: fit-content;
      padding: 10px;
      background-color: rgba(128, 128, 128, 0.6);
      border-radius: 5px;
    }

    #scoreboard-container th,
    #scoreboard-container td {
      color: white;
      text-align: center;
    }

    /* Ende-Elemente */
    #end {
      margin: 20px auto;
      max-width: 400px;
      padding: 10px;
      background-color: #f0f0f0;
      border-radius: 5px;
    }

    #endButton {
      text-align: center;
      margin-top: 20px;
    }

    button {
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      background-color: rgba(128, 128, 128, 0.6);
      color: #fff;
      margin: 5px;
      transition: background-color 0.3s ease;
    }

    button:hover {
      background-color: darkred;
    }

    button:hover span {
      display: none;
    }

    button:hover::after {
      content: attr(data-hover-text);
      display: inline-block;
    }



    /* Medienabfragen für Responsive Design */
    @media screen and (max-width: 600px) {
      h1 {
        font-size: 20px;
      }

      h2 {
        font-size: 16px;
      }

      .scoreboard,
      .quizbox,
      .betweenRound,
      .user1,
      .user2,
      .userscore1,
      .userscore2,
      #end {
        max-width: 300px;
      }
    }

    @media screen and (max-width: 400px) {

      .scoreboard,
      .quizbox,
      .betweenRound,
      .user1,
      .user2,
      .userscore1,
      .userscore2,
      #end {
        max-width: 250px;
      }
    }
    .rightAnswer{
      border-color: rgba(255, 0, 0, 0.6);
      border-radius: 15px;
      border-width: 2px;
      font-size: 20px;

    }
    .flaseAnswer{
      border-color: rgba(255, 0, 0, 0.6);
      border-radius: 15px;
      border-width: 2px;
      font-size: 20px;
    }
  </style>
</head>

<body>

  <div class="contentContainer">
    <h1>Room ID: <%= roomID%>
    </h1>
    <h2>User: <%= username%>
    </h2>
    <img src="<%= avatar%>" width="50px" height="50px">


    <div class="roundCounter" id="roundCounter"></div>

    <div class="scoreboard" id="scoreboard">
      <!-- scoreboard content will be dynamically generated -->
    </div>

    <div class="quizbox" id="quizbox">

      <h2 id="question-text"></h2>
      <div class="answers" id="option1-text"></div>
      <div class="answers" id="option2-text"></div>
      <div class="answers" id="option3-text"></div>
      <div class="answers" id="option4-text"></div>
    </div>

    <div class="betweenRound" id="waitText">Mach dich Bereit, die nächste Runde startet in :
      <div id="countdown">5</div>
      <div id="feedbackRightAnswer" class="rightAnswer"></div>
      <div id="feedbackFalseAnswer" class=" falseAnswer"></div>
    </div>

    <div class="userscore" id="scoreboard-container">
      <table id="AA">
        <thead>
          <tr>
            <th>Rang</th>
            <th>Benutzername: </th>
            <th>Punktzahl=></th>
          </tr>
        </thead>
        <tbody id="scoreboard-body">
          <!-- Hier werden die Spieler eingefügt -->
        </tbody>
      </table>
    </div>

    <div id="endButton">
      <form action="/index" method="GET">
        <button type="submit">Back to Dashboard</button>
      </form>
    </div>

  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const roomId = "<%= roomID %>";
    const username = "<%= username %>";
    var gameActive = true;

    window.onload = function () {
      socket.emit('gamePageLoaded', roomId, username);
      console.log(username);
      document.getElementById("roundCounter").style.display = 'none';
      document.getElementById("endButton").disabled = true;
      document.getElementById('scoreboard-container').style.display = 'none';
      document.getElementById('feedbackRightAnswer').style.display = 'none';
      document.getElementById('feedbackFalseAnswer').style.display = 'none';

    };
    window.addEventListener('beforeunload', function (event) {
      socket.emit('leaveGame', roomId, username);
    });

    const clickHandler = function () {
      socket.emit("questionSelected", roomId, username, this.textContent);
    };

    const option1TextElement = document.getElementById("option1-text");
    const option2TextElement = document.getElementById("option2-text");
    const option3TextElement = document.getElementById("option3-text");
    const option4TextElement = document.getElementById("option4-text");

    document.getElementById("option1-text").addEventListener("click", clickHandler);
    document.getElementById("option2-text").addEventListener("click", clickHandler);
    document.getElementById("option3-text").addEventListener("click", clickHandler);
    document.getElementById("option4-text").addEventListener("click", clickHandler);


    socket.on('question', function (question, round) {

      if (gameActive) {

        const waitTextq = document.getElementById('waitText')
        waitTextq.style.display = 'none';
        enableQuestions();
        document.getElementById('quizbox').style.display = 'block';
        document.getElementById("roundCounter").style.display = 'block';
        document.getElementById("roundCounter").textContent = "Runde: " + round;

        console.log("Frage erhlaten");
        document.getElementById('question-text').textContent = question.text;
        document.getElementById('option1-text').textContent = question.answers[0];
        document.getElementById('option2-text').textContent = question.answers[1];
        document.getElementById('option3-text').textContent = question.answers[2];
        document.getElementById('option4-text').textContent = question.answers[3];

      }
    });

    socket.on('wrongUser', () => {
      window.location.href = "/index";
    });

    socket.on("newRoundCountdown", (currentAnswerRight, currentRightAnswer, username) => {
      disableQuestions();
      console.log(currentAnswerRight + " | " + currentRightAnswer + " | " + username);
      document.getElementById('quizbox').style.display = 'none';
      const waitTextq = document.getElementById('waitText');
      waitTextq.style.display = 'block';
      startCountdown();

      if(currentAnswerRight){

        document.getElementById('feedbackRightAnswer').style.display = 'block';
        document.getElementById('feedbackRightAnswer').textContent = username + ": Richtige Antwort ! \n" + currentRightAnswer;
        
      }else{

        document.getElementById('feedbackFalseAnswer').style.display = 'block';
        document.getElementById('feedbackFalseAnswer').textContent = username + ": Falsche Antwort ! \n Richtige Antwort: " + currentRightAnswer;
      }
      
    });

    socket.on("test", (roomID) => {

      console.log("Test erfolgreich ! " + roomID);

    });

    socket.on('userLeftGame', (gameRunning) => {

      gameActive = gameRunning;
      document.getElementById('roundCounter').style.display ='block';
      document.getElementById("roundCounter").textContent = "Deine Gegner haben den Springer gemacht,\n deswegen wurde das Game beendet :(";
      document.getElementById('waitText').style.display = 'none';

    });


    socket.on("gameEnd", (players) => {

      disableQuestions(); //fragen ausblenden
      document.getElementById('quizbox').style.display = 'none';
      document.getElementById('scoreboard-container').style.display = 'block';

      players.sort((a, b) => b.score - a.score);
      const scoreboardContainer = document.getElementById("scoreboard-container");
      scoreboardContainer.innerHTML = ""; // Leeren des Inhalts des Behälters

      const scoreboardTable = document.createElement("table");
      const headerRow = document.createElement("tr");
      const rankHeader = document.createElement("th");
      rankHeader.textContent = "Rang";
      const usernameHeader = document.createElement("th");
      usernameHeader.textContent = "Benutzername";
      const scoreHeader = document.createElement("th");
      scoreHeader.textContent = "Punktzahl";

      headerRow.appendChild(rankHeader);
      headerRow.appendChild(usernameHeader);
      headerRow.appendChild(scoreHeader);
      scoreboardTable.appendChild(headerRow);

      players.forEach((player, index) => {
        const playerRow = document.createElement("tr");
        const rankCell = document.createElement("td");
        rankCell.textContent = index + 1;
        const usernameCell = document.createElement("td");
        usernameCell.textContent = player.username;
        const scoreCell = document.createElement("td");
        scoreCell.textContent = player.score;

        playerRow.appendChild(rankCell);
        playerRow.appendChild(usernameCell);
        playerRow.appendChild(scoreCell);
        scoreboardTable.appendChild(playerRow);
      });

      scoreboardContainer.appendChild(scoreboardTable);

    });

    socket.on("scoreBoard", function (players) {
      const scoreboardElement = document.getElementById("scoreboard");
      scoreboardElement.innerHTML = "";
      players.forEach(function (player) {
        const playerElement = document.createElement("div");
        playerElement.textContent = "Player: " + player.username + " | Score: " + player.score;
        scoreboardElement.appendChild(playerElement);
      });
    });
    function disableQuestions() {

      option1TextElement.removeEventListener('click', clickHandler);
      option2TextElement.removeEventListener('click', clickHandler);
      option3TextElement.removeEventListener('click', clickHandler);
      option4TextElement.removeEventListener('click', clickHandler);

      document.getElementById('question-text').textContent = " ";
      document.getElementById('option1-text').textContent = " ";
      document.getElementById('option2-text').textContent = " ";
      document.getElementById('option3-text').textContent = " ";
      document.getElementById('option4-text').textContent = " ";

      const answerElements = document.querySelectorAll('.answers');
      answerElements.forEach((element) => {
        element.classList.remove('answers');//.answers entfernen
      });

    }

    function enableQuestions() {

      option1TextElement.addEventListener('click', clickHandler);
      option2TextElement.addEventListener('click', clickHandler);
      option3TextElement.addEventListener('click', clickHandler);
      option4TextElement.addEventListener('click', clickHandler);

      option1TextElement.classList.add('answers');
      option2TextElement.classList.add('answers');
      option3TextElement.classList.add('answers');
      option4TextElement.classList.add('answers');
    }

    function startCountdown() {
      let timer = 5;
      const countdownText = document.getElementById('countdown');

      const countdownInterval = setInterval(() => {
        countdownText.textContent = timer;

        if (timer <= 0) {
          clearInterval(countdownInterval);

        }

        timer--;
      }, 1000);

    }

  </script>

</body>

</html>